services:
  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: aepg
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ae
      PGDATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - ae-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: aeredis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - ae-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Shared code builder
  shared:
    image: node:20-alpine
    container_name: aeshared
    working_dir: /app
    command: >
      sh -c "
        corepack enable && 
        corepack prepare pnpm@latest --activate && 
        pnpm config set store-dir /root/.pnpm-store &&
        pnpm install &&
        pnpm run build &&
        pnpm run watch
      "
    volumes:
      - ./shared:/app
      - shared-node-modules:/app/node_modules
      - pnpm-store:/root/.pnpm-store
    networks:
      - ae-network

  # Game server with hot-reloading
  server:
    image: node:20-alpine
    container_name: aeserver
    restart: unless-stopped
    working_dir: /app
    env_file:
      - ./server/.env.docker
    environment:
      - NODE_ENV=development
      - DEBUG=true
    ports:
      - "3000:3000"
    networks:
      - ae-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      shared:
        condition: service_started
    volumes:
      - ./server:/app
      - ./shared:/shared
      - server-node-modules:/app/node_modules
      - pnpm-store:/root/.pnpm-store
    command: >
      sh -c "
        apk add --no-cache python3 make g++ && 
        corepack enable && 
        corepack prepare pnpm@latest --activate && 
        pnpm config set store-dir /root/.pnpm-store &&
        pnpm install &&
        (pnpm run watch-shared & pnpm run dev)
      "

  # Client development server
  client:
    image: node:20-alpine
    container_name: aeclient
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
      - VITE_WS_URL=ws://localhost:3000
    ports:
      - "5173:5173"
    networks:
      - ae-network
    depends_on:
      - server
      - shared
    volumes:
      - ./client:/app
      - ./shared:/shared
      - client-node-modules:/app/node_modules
      - pnpm-store:/root/.pnpm-store
    command: >
      sh -c "
        apk add --no-cache python3 make g++ && 
        corepack enable && 
        corepack prepare pnpm@latest --activate && 
        pnpm config set store-dir /root/.pnpm-store &&
        pnpm install &&
        pnpm run dev -- --host 0.0.0.0
      "

networks:
  ae-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  server-node-modules:
  client-node-modules:
  shared-node-modules:
  pnpm-store: 
